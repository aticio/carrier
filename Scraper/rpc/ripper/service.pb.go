// Code generated by protoc-gen-go. DO NOT EDIT.
// seed: carrier/Scraper/rpc/scraper/service.proto

/*
Package com_carrier_scraper is a generated protocol buffer package.

It is generated from these files:
	carrier/Scraper/rpc/scraper/service.proto

It has these top-level messages:
	Server
*/
package com_carrier_scraper

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import com_carrier_seed "carrier/Seed/rpc/seed"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Seed from public import carrier/Seed/rpc/seed/service.proto
type Seed com_carrier_seed.Seed

func (m *Seed) Reset()              { (*com_carrier_seed.Seed)(m).Reset() }
func (m *Seed) String() string      { return (*com_carrier_seed.Seed)(m).String() }
func (*Seed) ProtoMessage()         {}
func (m *Seed) GetHost() string     { return (*com_carrier_seed.Seed)(m).GetHost() }
func (m *Seed) GetPort() string     { return (*com_carrier_seed.Seed)(m).GetPort() }
func (m *Seed) GetUsername() string { return (*com_carrier_seed.Seed)(m).GetUsername() }
func (m *Seed) GetPassword() string { return (*com_carrier_seed.Seed)(m).GetPassword() }
func (m *Seed) GetAttributes() []*Seed_Attribute {
	o := (*com_carrier_seed.Seed)(m).GetAttributes()
	if o == nil {
		return nil
	}
	s := make([]*Seed_Attribute, len(o))
	for i, x := range o {
		s[i] = (*Seed_Attribute)(x)
	}
	return s
}

// Attribute from public import carrier/Seed/rpc/seed/service.proto
type Seed_Attribute com_carrier_seed.Seed_Attribute

func (m *Seed_Attribute) Reset()         { (*com_carrier_seed.Seed_Attribute)(m).Reset() }
func (m *Seed_Attribute) String() string { return (*com_carrier_seed.Seed_Attribute)(m).String() }
func (*Seed_Attribute) ProtoMessage()    {}
func (m *Seed_Attribute) GetType() string {
	return (*com_carrier_seed.Seed_Attribute)(m).GetType()
}
func (m *Seed_Attribute) GetName() string {
	return (*com_carrier_seed.Seed_Attribute)(m).GetName()
}
func (m *Seed_Attribute) GetUrl() string { return (*com_carrier_seed.Seed_Attribute)(m).GetUrl() }
func (m *Seed_Attribute) GetInterval() string {
	return (*com_carrier_seed.Seed_Attribute)(m).GetInterval()
}
func (m *Seed_Attribute) GetMetrics() []*Seed_Attribute_Metric {
	o := (*com_carrier_seed.Seed_Attribute)(m).GetMetrics()
	if o == nil {
		return nil
	}
	s := make([]*Seed_Attribute_Metric, len(o))
	for i, x := range o {
		s[i] = (*Seed_Attribute_Metric)(x)
	}
	return s
}

// Metric from public import carrier/Seed/rpc/seed/service.proto
type Seed_Attribute_Metric com_carrier_seed.Seed_Attribute_Metric

func (m *Seed_Attribute_Metric) Reset() { (*com_carrier_seed.Seed_Attribute_Metric)(m).Reset() }
func (m *Seed_Attribute_Metric) String() string {
	return (*com_carrier_seed.Seed_Attribute_Metric)(m).String()
}
func (*Seed_Attribute_Metric) ProtoMessage() {}
func (m *Seed_Attribute_Metric) GetName() string {
	return (*com_carrier_seed.Seed_Attribute_Metric)(m).GetName()
}
func (m *Seed_Attribute_Metric) GetJpath() string {
	return (*com_carrier_seed.Seed_Attribute_Metric)(m).GetJpath()
}

// Result from public import carrier/Seed/rpc/seed/service.proto
type Result com_carrier_seed.Result

func (m *Result) Reset()            { (*com_carrier_seed.Result)(m).Reset() }
func (m *Result) String() string    { return (*com_carrier_seed.Result)(m).String() }
func (*Result) ProtoMessage()       {}
func (m *Result) GetStatus() string { return (*com_carrier_seed.Result)(m).GetStatus() }

// Seeds from public import carrier/Seed/rpc/seed/service.proto
type Seeds com_carrier_seed.Seeds

func (m *Seeds) Reset()         { (*com_carrier_seed.Seeds)(m).Reset() }
func (m *Seeds) String() string { return (*com_carrier_seed.Seeds)(m).String() }
func (*Seeds) ProtoMessage()    {}
func (m *Seeds) GetSeeds() []*Seed {
	o := (*com_carrier_seed.Seeds)(m).GetSeeds()
	if o == nil {
		return nil
	}
	s := make([]*Seed, len(o))
	for i, x := range o {
		s[i] = (*Seed)(x)
	}
	return s
}

// Void from public import carrier/Seed/rpc/seed/service.proto
type Void com_carrier_seed.Void

func (m *Void) Reset()         { (*com_carrier_seed.Void)(m).Reset() }
func (m *Void) String() string { return (*com_carrier_seed.Void)(m).String() }
func (*Void) ProtoMessage()    {}

type Server struct {
	Host string `protobuf:"bytes,1,opt,name=host" json:"host,omitempty"`
	Port string `protobuf:"bytes,2,opt,name=port" json:"port,omitempty"`
}

func (m *Server) Reset()                    { *m = Server{} }
func (m *Server) String() string            { return proto.CompactTextString(m) }
func (*Server) ProtoMessage()               {}
func (*Server) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Server) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Server) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

func init() {
	proto.RegisterType((*Server)(nil), "com.carrier.scraper.Server")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ScraperService service

type ScraperServiceClient interface {
	GetServerSeed(ctx context.Context, in *Server, opts ...grpc.CallOption) (*com_carrier_seed.Seed, error)
}

type scraperServiceClient struct {
	cc *grpc.ClientConn
}

func NewScraperServiceClient(cc *grpc.ClientConn) ScraperServiceClient {
	return &scraperServiceClient{cc}
}

func (c *scraperServiceClient) GetServerSeed(ctx context.Context, in *Server, opts ...grpc.CallOption) (*com_carrier_seed.Seed, error) {
	out := new(com_carrier_seed.Seed)
	err := grpc.Invoke(ctx, "/com.carrier.scraper.ScraperService/GetServerSeed", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ScraperService service

type ScraperServiceServer interface {
	GetServerSeed(context.Context, *Server) (*com_carrier_seed.Seed, error)
}

func RegisterScraperServiceServer(s *grpc.Server, srv ScraperServiceServer) {
	s.RegisterService(&_ScraperService_serviceDesc, srv)
}

func _ScraperService_GetServerSeed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Server)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScraperServiceServer).GetServerSeed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.carrier.scraper.ScraperService/GetServerSeed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScraperServiceServer).GetServerSeed(ctx, req.(*Server))
	}
	return interceptor(ctx, in, info, handler)
}

var _ScraperService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.carrier.scraper.ScraperService",
	HandlerType: (*ScraperServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetServerSeed",
			Handler:    _ScraperService_GetServerSeed_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "carrier/Scraper/rpc/scraper/service.proto",
}

func init() { proto.RegisterFile("carrier/Scraper/rpc/scraper/service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 167 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x8e, 0x31, 0x0b, 0xc2, 0x30,
	0x10, 0x85, 0xad, 0x48, 0xc1, 0x80, 0x08, 0x37, 0x95, 0x4c, 0xe2, 0xa2, 0xd3, 0x45, 0xf4, 0x47,
	0x88, 0x9b, 0x34, 0x9b, 0xa3, 0xe1, 0xc0, 0x0c, 0x72, 0xe1, 0x92, 0xf6, 0xf7, 0x4b, 0x73, 0x22,
	0x14, 0xb7, 0xc7, 0xe5, 0x7d, 0x2f, 0x9f, 0x39, 0x04, 0x1e, 0x24, 0x92, 0xb8, 0x3e, 0xa6, 0x44,
	0xe2, 0x24, 0x05, 0x27, 0x1a, 0x33, 0xc9, 0x18, 0x03, 0x61, 0x12, 0x2e, 0x0c, 0x10, 0xf8, 0x8d,
	0xdf, 0x32, 0x6a, 0xc3, 0xfe, 0x60, 0xcf, 0x83, 0x04, 0xaa, 0x70, 0xd6, 0x38, 0x83, 0xf7, 0x27,
	0xd3, 0x7a, 0x92, 0x91, 0x04, 0xc0, 0xac, 0x5e, 0x9c, 0x4b, 0xd7, 0xec, 0x9a, 0xe3, 0xba, 0xaf,
	0x79, 0xba, 0x25, 0x96, 0xd2, 0x2d, 0xf5, 0x36, 0xe5, 0xf3, 0xc3, 0x6c, 0xd4, 0xc8, 0xeb, 0x10,
	0xdc, 0xcc, 0xf6, 0x4a, 0x45, 0x57, 0xf4, 0x3b, 0xb0, 0xf8, 0xef, 0x84, 0xda, 0xb0, 0xf3, 0x37,
	0x95, 0x42, 0xe5, 0xee, 0x8b, 0x67, 0x5b, 0xb5, 0x2e, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc3,
	0xe7, 0xe1, 0x82, 0xfe, 0x00, 0x00, 0x00,
}
