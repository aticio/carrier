// Code generated by protoc-gen-go. DO NOT EDIT.
// seed: service.proto

/*
Package com_carrier_carrierjvm is a generated protocol buffer package.

It is generated from these files:
	service.proto

It has these top-level messages:
	CarrierJvm
	Result
	Void
*/
package com_carrier_carrierjvm

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CarrierJvm struct {
	Host string `protobuf:"bytes,1,opt,name=host" json:"host,omitempty"`
	Port string `protobuf:"bytes,2,opt,name=port" json:"port,omitempty"`
}

func (m *CarrierJvm) Reset()                    { *m = CarrierJvm{} }
func (m *CarrierJvm) String() string            { return proto.CompactTextString(m) }
func (*CarrierJvm) ProtoMessage()               {}
func (*CarrierJvm) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CarrierJvm) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *CarrierJvm) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

type Result struct {
	Status string `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
}

func (m *Result) Reset()                    { *m = Result{} }
func (m *Result) String() string            { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()               {}
func (*Result) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Result) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type Void struct {
}

func (m *Void) Reset()                    { *m = Void{} }
func (m *Void) String() string            { return proto.CompactTextString(m) }
func (*Void) ProtoMessage()               {}
func (*Void) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func init() {
	proto.RegisterType((*CarrierJvm)(nil), "com.carrier.carrierjvm.CarrierJvm")
	proto.RegisterType((*Result)(nil), "com.carrier.carrierjvm.Result")
	proto.RegisterType((*Void)(nil), "com.carrier.carrierjvm.Void")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for CarrierJvmService service

type CarrierJvmServiceClient interface {
	UpdateCarrierJvm(ctx context.Context, in *CarrierJvm, opts ...grpc.CallOption) (*Result, error)
	AddCarrierJvm(ctx context.Context, in *CarrierJvm, opts ...grpc.CallOption) (*Result, error)
	DeleteCarrierJvm(ctx context.Context, in *Void, opts ...grpc.CallOption) (*Result, error)
}

type carrierJvmServiceClient struct {
	cc *grpc.ClientConn
}

func NewCarrierJvmServiceClient(cc *grpc.ClientConn) CarrierJvmServiceClient {
	return &carrierJvmServiceClient{cc}
}

func (c *carrierJvmServiceClient) UpdateCarrierJvm(ctx context.Context, in *CarrierJvm, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := grpc.Invoke(ctx, "/com.carrier.carrierjvm.CarrierJvmService/UpdateCarrierJvm", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *carrierJvmServiceClient) AddCarrierJvm(ctx context.Context, in *CarrierJvm, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := grpc.Invoke(ctx, "/com.carrier.carrierjvm.CarrierJvmService/AddCarrierJvm", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *carrierJvmServiceClient) DeleteCarrierJvm(ctx context.Context, in *Void, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := grpc.Invoke(ctx, "/com.carrier.carrierjvm.CarrierJvmService/DeleteCarrierJvm", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for CarrierJvmService service

type CarrierJvmServiceServer interface {
	UpdateCarrierJvm(context.Context, *CarrierJvm) (*Result, error)
	AddCarrierJvm(context.Context, *CarrierJvm) (*Result, error)
	DeleteCarrierJvm(context.Context, *Void) (*Result, error)
}

func RegisterCarrierJvmServiceServer(s *grpc.Server, srv CarrierJvmServiceServer) {
	s.RegisterService(&_CarrierJvmService_serviceDesc, srv)
}

func _CarrierJvmService_UpdateCarrierJvm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CarrierJvm)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CarrierJvmServiceServer).UpdateCarrierJvm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.carrier.carrierjvm.CarrierJvmService/UpdateCarrierJvm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CarrierJvmServiceServer).UpdateCarrierJvm(ctx, req.(*CarrierJvm))
	}
	return interceptor(ctx, in, info, handler)
}

func _CarrierJvmService_AddCarrierJvm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CarrierJvm)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CarrierJvmServiceServer).AddCarrierJvm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.carrier.carrierjvm.CarrierJvmService/AddCarrierJvm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CarrierJvmServiceServer).AddCarrierJvm(ctx, req.(*CarrierJvm))
	}
	return interceptor(ctx, in, info, handler)
}

func _CarrierJvmService_DeleteCarrierJvm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CarrierJvmServiceServer).DeleteCarrierJvm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.carrier.carrierjvm.CarrierJvmService/DeleteCarrierJvm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CarrierJvmServiceServer).DeleteCarrierJvm(ctx, req.(*Void))
	}
	return interceptor(ctx, in, info, handler)
}

var _CarrierJvmService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.carrier.carrierjvm.CarrierJvmService",
	HandlerType: (*CarrierJvmServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateCarrierJvm",
			Handler:    _CarrierJvmService_UpdateCarrierJvm_Handler,
		},
		{
			MethodName: "AddCarrierJvm",
			Handler:    _CarrierJvmService_AddCarrierJvm_Handler,
		},
		{
			MethodName: "DeleteCarrierJvm",
			Handler:    _CarrierJvmService_DeleteCarrierJvm_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}

func init() { proto.RegisterFile("service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 194 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x4b, 0xce, 0xcf, 0xd5, 0x4b,
	0xce, 0x2f, 0x2d, 0xca, 0x4c, 0x2d, 0x82, 0xd1, 0x59, 0x65, 0xb9, 0x4a, 0x26, 0x5c, 0x5c, 0xce,
	0x10, 0x9e, 0x57, 0x59, 0xae, 0x90, 0x10, 0x17, 0x4b, 0x46, 0x7e, 0x71, 0x89, 0x04, 0xa3, 0x02,
	0xa3, 0x06, 0x67, 0x10, 0x98, 0x0d, 0x12, 0x2b, 0xc8, 0x2f, 0x2a, 0x91, 0x60, 0x82, 0x88, 0x81,
	0xd8, 0x4a, 0x0a, 0x5c, 0x6c, 0x41, 0xa9, 0xc5, 0xa5, 0x39, 0x25, 0x42, 0x62, 0x5c, 0x6c, 0xc5,
	0x25, 0x89, 0x25, 0xa5, 0xc5, 0x50, 0x3d, 0x50, 0x9e, 0x12, 0x1b, 0x17, 0x4b, 0x58, 0x7e, 0x66,
	0x8a, 0xd1, 0x24, 0x26, 0x2e, 0x41, 0x84, 0x05, 0xc1, 0x10, 0x37, 0x09, 0x85, 0x71, 0x09, 0x84,
	0x16, 0xa4, 0x24, 0x96, 0xa4, 0x22, 0xd9, 0xad, 0xa4, 0x87, 0xdd, 0x89, 0x7a, 0x08, 0x35, 0x52,
	0x72, 0xb8, 0xd4, 0x40, 0x5d, 0x13, 0xcc, 0xc5, 0xeb, 0x98, 0x92, 0x42, 0x65, 0x43, 0x03, 0xb8,
	0x04, 0x5c, 0x52, 0x73, 0x52, 0x51, 0x1c, 0x2b, 0x83, 0x4b, 0x0f, 0xc8, 0xd3, 0x84, 0x4c, 0x4c,
	0x62, 0x03, 0xc7, 0x89, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x42, 0x7b, 0x26, 0x5f, 0xa4, 0x01,
	0x00, 0x00,
}
